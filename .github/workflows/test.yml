name: Test
on:
  pull_request:

jobs:
  create-shards:
    runs-on: ubuntu-latest
    outputs:
      shards: ${{ steps.shards.outputs.shards }}
      shard-count: ${{ steps.shards.outputs.count }}
    steps:
      - id: shards
        run: |
          shard_count=3

          echo "count=[$shard_count]" >> $GITHUB_OUTPUT
          max_shard=$((shard_count - 1))
          echo "shards=[$(seq -s ', ' 0 $max_shard)]" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: create-shards
    strategy:
      fail-fast: false
      matrix:
        shard: ${{ fromJson(needs.create-shards.outputs.shards) }}
        shard-count: ${{ fromJson(needs.create-shards.outputs.shard-count) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          save-always: true
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        run: npm i -g pnpm
      - name: Test
        run: cargo test
        env:
          SHARD: ${{ matrix.shard }}
          SHARD_COUNT: ${{ matrix.shard-count }}
